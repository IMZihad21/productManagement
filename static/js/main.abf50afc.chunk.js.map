{"version":3,"sources":["Pages/Shared/Header/Header.js","Pages/Home/Home.js","Pages/Products/Products/Products.js","Pages/Products/UpdateProduct/UpdateProduct.js","Pages/Products/AddProduct/AddProuct.js","App.js","reportWebVitals.js","index.js"],"names":["Header","to","exact","Home","Products","useState","products","setProducts","useEffect","axios","get","then","response","data","length","map","productName","productPrice","productQuantity","_id","onClick","id","window","confirm","serverAPI","delete","deletedCount","updatedproducts","filter","alert","handleDeleteBtn","UpdateProduct","error","setError","onSubmit","e","preventDefault","target","elements","value","product","parseInt","post","acknowledged","reset","htmlFor","type","name","AddProuct","App","className","basename","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAaeA,EAVA,WACX,OACI,gCACI,cAAC,IAAD,CAASC,GAAG,IAAIC,OAAK,EAArB,kBACA,cAAC,IAAD,CAASD,GAAG,YAAZ,sBACA,cAAC,IAAD,CAASA,GAAG,cAAZ,yBCEGE,EARF,WACT,OACI,8BACI,yD,wBC+CGC,EAhDE,WACb,MAAkCC,mBAAS,IAA3C,mBAAQC,EAAR,KAAkBC,EAAlB,KAEAC,qBAAU,WAENC,IAAMC,IADY,kCAEbC,MAAK,SAAAC,GAAQ,OAAIL,EAAYK,EAASC,WAC5C,IAoBH,OACI,gCACI,kDAAqBP,EAASQ,UAC9B,6BAEQR,EAASS,KAAI,SAAAF,GAAI,OAAI,+BAGjB,0CAAoBA,EAAKG,YAHR,MAIjB,2CAAqBH,EAAKI,aAJT,MAKjB,6CAAuBJ,EAAKK,gBALX,MAMjB,uBACA,cAAC,IAAD,CAAMjB,GAAE,mBAAcY,EAAKM,KAA3B,SAAkC,8CAClC,wBAAQC,QAAS,kBA/Bb,SAACC,GAErB,GADgBC,OAAOC,QAAQ,qCAClB,CACT,IAAMC,EAAS,wCAAoCH,GACnDZ,IAAMgB,OAAOD,GACRb,MAAK,YAAe,IAAZE,EAAW,EAAXA,KACL,GAA2B,KAAnB,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMa,cAAoB,CAC1B,IAAMC,EAAkBrB,EAASsB,QAAO,SAAAf,GAAI,OAAIA,EAAKM,MAAQE,KAC7Dd,EAAYoB,GACZE,MAAM,+BAGNA,MAAM,yBAmBiBC,CAAgBjB,EAAKM,MAA5C,sBAPKN,EAAKM,cCyBnBY,EA3DO,WAClB,MAA4B1B,oBAAS,GAArC,mBAAQ2B,EAAR,KAAeC,EAAf,KAkCA,OACI,gCACI,uBAAMC,SAnCW,SAAAC,GAAM,IAAD,MAC1BA,EAAEC,iBACFH,GAAS,GAET,IAAMjB,EAAW,UAAGmB,EAAEE,OAAOC,SAAStB,mBAArB,aAAG,EAA+BuB,MAC7CtB,EAAY,UAAGkB,EAAEE,OAAOC,SAASrB,oBAArB,aAAG,EAAgCsB,MAC/CrB,EAAe,UAAGiB,EAAEE,OAAOC,SAASpB,uBAArB,aAAG,EAAmCqB,MAE3D,GAAoB,KAAhBvB,GAAuC,KAAjBC,GAA2C,KAApBC,EAAjD,CAKA,IAAMsB,EAAU,CACZxB,cACAC,aAAcwB,SAASxB,GACvBC,gBAAiBuB,SAASvB,IAI9BT,IACKiC,KAFa,gCAEGF,GAChB7B,MAAK,SAACC,GAAc,IAAD,EAChB,UAAIA,EAASC,YAAb,OAAI,EAAe8B,cACfd,MAAM,6BACNM,EAAEE,OAAOO,SAGTf,MAAM,qCAnBdI,GAAS,IA0BT,UACI,gCACI,uBAAOY,QAAQ,cAAf,0CACA,uBAAOC,KAAK,OAAOC,KAAK,GAAG1B,GAAG,mBAElC,gCACI,uBAAOwB,QAAQ,eAAf,2CACA,uBAAOC,KAAK,SAASC,KAAK,GAAG1B,GAAG,oBAEpC,gCACI,uBAAOwB,QAAQ,kBAAf,8CACA,uBAAOC,KAAK,SAASC,KAAK,GAAG1B,GAAG,uBAEpC,+CAGAW,GAAS,0DCKVgB,EA1DG,WACd,MAA4B3C,oBAAS,GAArC,mBAAQ2B,EAAR,KAAeC,EAAf,KAiCA,OACI,gCACI,uBAAMC,SAlCW,SAAAC,GAAM,IAAD,MAC1BA,EAAEC,iBACFH,GAAS,GAET,IAAMjB,EAAW,UAAGmB,EAAEE,OAAOC,SAAStB,mBAArB,aAAG,EAA+BuB,MAC7CtB,EAAY,UAAGkB,EAAEE,OAAOC,SAASrB,oBAArB,aAAG,EAAgCsB,MAC/CrB,EAAe,UAAGiB,EAAEE,OAAOC,SAASpB,uBAArB,aAAG,EAAmCqB,MAE3D,GAAoB,KAAhBvB,GAAuC,KAAjBC,GAA2C,KAApBC,EAAjD,CAKA,IAAMsB,EAAU,CACZxB,cACAC,aAAcwB,SAASxB,GACvBC,gBAAiBuB,SAASvB,IAI9BT,IAAMiC,KADY,gCACIF,GACjB7B,MAAK,SAACC,GAAc,IAAD,EAChB,UAAIA,EAASC,YAAb,OAAI,EAAe8B,cACfd,MAAM,6BACNM,EAAEE,OAAOO,SAGTf,MAAM,qCAlBdI,GAAS,IAyBT,UACI,gCACI,uBAAOY,QAAQ,cAAf,0CACA,uBAAOC,KAAK,OAAOC,KAAK,GAAG1B,GAAG,mBAElC,gCACI,uBAAOwB,QAAQ,eAAf,2CACA,uBAAOC,KAAK,SAASC,KAAK,GAAG1B,GAAG,oBAEpC,gCACI,uBAAOwB,QAAQ,kBAAf,8CACA,uBAAOC,KAAK,SAASC,KAAK,GAAG1B,GAAG,uBAEpC,+CAGAW,GAAS,0DC/BViB,MAhBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,CAAeC,SAAS,qBAAxB,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWlD,EAAMD,OAAK,IACtC,cAAC,IAAD,CAAOkD,KAAK,YAAYC,UAAWjD,IACnC,cAAC,IAAD,CAAOgD,KAAK,cAAcC,UAAWL,IACrC,cAAC,IAAD,CAAOI,KAAK,sBAAsBC,UAAWtB,aCLxCuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.abf50afc.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => {\n    return (\n        <div>\n            <NavLink to=\"/\" exact>Home</NavLink>\n            <NavLink to=\"/products\">Products</NavLink>\n            <NavLink to=\"/addProduct\" >Add New</NavLink>\n        </div>\n    );\n};\n\nexport default Header;","import React from 'react';\n\nconst Home = () => {\n    return (\n        <div>\n            <h1>Welcome to FakeStore</h1>\n        </div>\n    );\n};\n\nexport default Home;","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Products = () => {\n    const [ products, setProducts ] = useState([])\n\n    useEffect(() => {\n        const serverAPI = \"http://localhost:5000/products\";\n        axios.get(serverAPI)\n            .then(response => setProducts(response.data));\n    }, [])\n\n    const handleDeleteBtn = (id) => {\n        const proceed = window.confirm('Are you sure, you want to delete?');\n        if (proceed) {\n            const serverAPI = `http://localhost:5000/product/${id}`;\n            axios.delete(serverAPI)\n                .then(({ data }) => {\n                    if (data?.deletedCount === 1) {\n                        const updatedproducts = products.filter(data => data._id !== id)\n                        setProducts(updatedproducts);\n                        alert(\"Deleted from database!\");\n                    }\n                    else {\n                        alert(\"Failed to delete!\");\n                    }\n                });\n        }\n    }\n\n    return (\n        <div>\n            <h1>Total Products: {products.length}</h1>\n            <ul>\n                {\n                    products.map(data => <li\n                        key={data._id}\n                    >\n                        <span>Name: </span>{data.productName} ::\n                        <span>Price: </span>{data.productPrice} ::\n                        <span>Quanity: </span>{data.productQuantity} ::\n                        <br />\n                        <Link to={`/product/${data._id}`}><button>Update</button></Link>\n                        <button onClick={() => handleDeleteBtn(data._id)}>Delete</button>\n                    </li>)\n                }\n            </ul>\n        </div>\n    );\n};\n\nexport default Products;","import axios from 'axios';\nimport React, { useState } from 'react';\n\nconst UpdateProduct = () => {\n    const [ error, setError ] = useState(false)\n    const handleFormSubmit = e => {\n        e.preventDefault();\n        setError(false);\n\n        const productName = e.target.elements.productName?.value;\n        const productPrice = e.target.elements.productPrice?.value;\n        const productQuantity = e.target.elements.productQuantity?.value;\n\n        if (productName === '' || productPrice === '' || productQuantity === '') {\n            setError(true);\n            return\n        }\n\n        const product = {\n            productName,\n            productPrice: parseInt(productPrice),\n            productQuantity: parseInt(productQuantity)\n        }\n\n        const serverAPI = \"http://localhost:5000/product\";\n        axios\n            .post(serverAPI, product)\n            .then((response) => {\n                if (response.data?.acknowledged) {\n                    alert('Product added to database')\n                    e.target.reset();\n                }\n                else {\n                    alert('Failed to add to database')\n                }\n            });\n\n    };\n    return (\n        <div>\n            <form onSubmit={handleFormSubmit}>\n                <div>\n                    <label htmlFor=\"productName\">Enter your product's Name:  </label>\n                    <input type=\"text\" name=\"\" id=\"productName\" />\n                </div>\n                <div>\n                    <label htmlFor=\"productPrice\">Enter your product's Price:  </label>\n                    <input type=\"number\" name=\"\" id=\"productPrice\" />\n                </div>\n                <div>\n                    <label htmlFor=\"productQuantity\">Enter your product's Quantity:  </label>\n                    <input type=\"number\" name=\"\" id=\"productQuantity\" />\n                </div>\n                <button>Submit</button>\n            </form>\n            {\n                error && <h1>All inputs required!</h1>\n            }\n        </div>\n    );\n};\n\nexport default UpdateProduct;","import axios from 'axios';\nimport React, { useState } from 'react';\n\nconst AddProuct = () => {\n    const [ error, setError ] = useState(false)\n    const handleFormSubmit = e => {\n        e.preventDefault();\n        setError(false);\n\n        const productName = e.target.elements.productName?.value;\n        const productPrice = e.target.elements.productPrice?.value;\n        const productQuantity = e.target.elements.productQuantity?.value;\n\n        if (productName === '' || productPrice === '' || productQuantity === '') {\n            setError(true);\n            return\n        }\n\n        const product = {\n            productName,\n            productPrice: parseInt(productPrice),\n            productQuantity: parseInt(productQuantity)\n        }\n\n        const serverAPI = \"http://localhost:5000/product\";\n        axios.post(serverAPI, product)\n            .then((response) => {\n                if (response.data?.acknowledged) {\n                    alert('Product added to database')\n                    e.target.reset();\n                }\n                else {\n                    alert('Failed to add to database')\n                }\n            });\n\n    };\n    return (\n        <div>\n            <form onSubmit={handleFormSubmit}>\n                <div>\n                    <label htmlFor=\"productName\">Enter your product's Name:  </label>\n                    <input type=\"text\" name=\"\" id=\"productName\" />\n                </div>\n                <div>\n                    <label htmlFor=\"productPrice\">Enter your product's Price:  </label>\n                    <input type=\"number\" name=\"\" id=\"productPrice\" />\n                </div>\n                <div>\n                    <label htmlFor=\"productQuantity\">Enter your product's Quantity:  </label>\n                    <input type=\"number\" name=\"\" id=\"productQuantity\" />\n                </div>\n                <button>Submit</button>\n            </form>\n            {\n                error && <h1>All inputs required!</h1>\n            }\n        </div>\n    );\n};\n\nexport default AddProuct;","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './Pages/Shared/Header/Header';\nimport Home from './Pages/Home/Home';\nimport Products from './Pages/Products/Products/Products';\nimport UpdateProduct from './Pages/Products/UpdateProduct/UpdateProduct';\nimport AddProuct from './Pages/Products/AddProduct/AddProuct';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename='/productManagement'>\n        <Header />\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/products\" component={Products} />\n          <Route path=\"/addProduct\" component={AddProuct} />\n          <Route path=\"/product/:productID\" component={UpdateProduct} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}